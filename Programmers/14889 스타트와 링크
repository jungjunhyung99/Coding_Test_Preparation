const fs = require("fs");
const filePath = process.platform === "linux" ? "/dev/stdin" : "input.txt";
let input = fs.readFileSync(filePath).toString().trim().split("\n");

const M = Number(input.shift());
// let [M, N] = input.shift().split(" ").map(Number);
input = input
  .map((item) => item.replace("\r", ""))
  .map((item) => item.split(" ").map((item) => Number(item)));

let allSum = 0;
let min = 100000;
const eleList = [];

for (let i = 0; i < input.length; i++) {
  allSum += input[i].reduce((acc, cur) => (acc += cur), 0);
}

const getSum = (list) => {
  let sum = 0;
  for (let i = 0; i < list.length; i++) {
    const firstEle = list[i];
    for (let j = i + 1; j < list.length; j++) {
      const secondEle = list[j];
      sum += input[firstEle][secondEle];
      sum += input[secondEle][firstEle];
    }
  }

  return sum;
};

const dfs = (n, idx) => {
  if (eleList.length === n / 2) {
    const set = new Set(eleList);
    const secondList = [];
    for (let i = 0; i < n; i++) {
      if (!set.has(i)) secondList.push(i);
    }

    min = Math.min(min, Math.abs(getSum(eleList) - getSum(secondList)));
    return;
  }

  for (let i = idx; i < M; i++) {
    eleList.push(i);
    dfs(n, i + 1);
    eleList.pop();
  }
};

dfs(M, 0);

console.log(min);
