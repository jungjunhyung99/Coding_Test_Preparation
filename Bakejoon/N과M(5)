#include <iostream>
#include <vector>
#include <algorithm>
#define MAX 8
using namespace std;

int n, m;
int arr[MAX] = { 0, };
bool visited[MAX] = { 0, };
vector<int> v;

void dfs(int cnt)
{
    if (cnt == m) {
        for (int i = 0; i < m ; i++) {
            printf("%d ", arr[i]);
        }
        printf("\n");
        return;
    }

    for (int i = 0; i < v.size(); i++) {
        if (!visited[i]) {
            arr[cnt] = v[i];
            visited[i] = true;
            dfs(cnt + 1);
            visited[i] = false;
        }
    }

}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin >> n >> m;
    v.resize(n);

    for (int i = 0; i < n; i++) {
        cin >> v[i];
    }
    sort(v.begin(), v.end());
    dfs(0);
}
