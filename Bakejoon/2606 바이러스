#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;

int num = 0;

void find_dfs(int start, vector<int>* v, bool *visited) {
	visited[start] = true;
	for (int i = 0; i < v[start].size(); i++) {
		if (!visited[v[start][i]]) {
			find_dfs(v[start][i], v, visited);
			num++;
		}
	}
}

int main() {
	int node, edge;
	cin >> node >> edge;
	vector<int>* v = new vector<int>[node + 1];
	bool *visited = new bool[node + 1];
	
	for (int i = 0; i < node + 1; i++) {
		visited[i] = false;
	}

	for (int i = 0; i < edge; i++) {
		int start, end;
		cin >> start >> end;
		v[start].push_back(end);
		v[end].push_back(start); // 반대로 하는 이유: 양방향이기 때문이다.
	}

	find_dfs(1, v, visited);
	cout << num << endl;
	return 0;
}
